# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Dependencies
node_modules/
npm-debug.log*
yarn-error.log
.pnp/
.pnp.js

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*

# Build output
build/
dist/

# Miscellaneous
.DS_Store
.vscode/
.idea/
*.log
logs/
*.sqlite
*.sqlite-journal

# Editor files
*.swp
*.swo
*.sublime-workspace

# Lint cache
.eslintcache

# TypeScript build files
*.tsbuildinfo

# Testing
/coverage/
*.snap

# Next.js (if applicable)
.next/
/out/

# Parcel cache
.cache/

lambda_output